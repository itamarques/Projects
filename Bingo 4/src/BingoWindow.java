
import java.awt.Color;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

public class BingoWindow extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    BingoControl gameMind = new BingoControl();
    ArrayList<PlayerControl> playerMap = new ArrayList<>();
    private int winnerIs = -1;
    //private WinnerDetails winnerDetailsUser;
    //private WinnerDetails winnerDetailsComputer;
    //private final List<JButton> botoes;

    GameDetails gd = GameDetails.getInstance();

    // RAULS VARIABLES
    int nextNumber = 0;
    boolean winnerNotFound = true;

    /**
     * Creates new form BingoWindow
     */
    public BingoWindow() {
        initComponents();
        //Center the Jframe
        //this.setLocationRelativeTo(null);
        //fillLists();

        startGame();
    }

    // filling user tables
    public void fillColumns(String columnLetter,
            ArrayList<Integer> numbersOfColumn) {
        switch (columnLetter) {
            case "B": {
                br1c1.setText(numbersOfColumn.get(0).toString());
                br2c1.setText(numbersOfColumn.get(1).toString());
                br3c1.setText(numbersOfColumn.get(2).toString());
                br4c1.setText(numbersOfColumn.get(3).toString());
                br5c1.setText(numbersOfColumn.get(4).toString());
                break;
            }
            case "I": {
                ir1c2.setText(numbersOfColumn.get(0).toString());
                ir2c2.setText(numbersOfColumn.get(1).toString());
                ir3c2.setText(numbersOfColumn.get(2).toString());
                ir4c2.setText(numbersOfColumn.get(3).toString());
                ir5c2.setText(numbersOfColumn.get(4).toString());
                break;
            }
            case "N": {
                nr1c3.setText(numbersOfColumn.get(0).toString());
                nr2c3.setText(numbersOfColumn.get(1).toString());
                freeSpace.setText(numbersOfColumn.get(2).toString());
                nr4c3.setText(numbersOfColumn.get(3).toString());
                nr5c3.setText(numbersOfColumn.get(4).toString());
                break;
            }
            case "G": {
                gr1c4.setText(numbersOfColumn.get(0).toString());
                gr2c4.setText(numbersOfColumn.get(1).toString());
                gr3c4.setText(numbersOfColumn.get(2).toString());
                gr4c4.setText(numbersOfColumn.get(3).toString());
                gr5c4.setText(numbersOfColumn.get(4).toString());
                break;
            }
            case "O": {
                or1c5.setText(numbersOfColumn.get(0).toString());
                or2c5.setText(numbersOfColumn.get(1).toString());
                or3c5.setText(numbersOfColumn.get(2).toString());
                or4c5.setText(numbersOfColumn.get(3).toString());
                or5c5.setText(numbersOfColumn.get(4).toString());
                break;
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        randomNumberLabel = new javax.swing.JLabel();
        randomLetterLabel = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nr2c3 = new javax.swing.JButton();
        ir2c2 = new javax.swing.JButton();
        gr2c4 = new javax.swing.JButton();
        or2c5 = new javax.swing.JButton();
        br2c1 = new javax.swing.JButton();
        freeSpace = new javax.swing.JButton();
        ir3c2 = new javax.swing.JButton();
        gr3c4 = new javax.swing.JButton();
        or3c5 = new javax.swing.JButton();
        br3c1 = new javax.swing.JButton();
        nr4c3 = new javax.swing.JButton();
        ir4c2 = new javax.swing.JButton();
        gr4c4 = new javax.swing.JButton();
        or4c5 = new javax.swing.JButton();
        br4c1 = new javax.swing.JButton();
        nr5c3 = new javax.swing.JButton();
        ir5c2 = new javax.swing.JButton();
        gr5c4 = new javax.swing.JButton();
        or5c5 = new javax.swing.JButton();
        br5c1 = new javax.swing.JButton();
        nr1c3 = new javax.swing.JButton();
        ir1c2 = new javax.swing.JButton();
        gr1c4 = new javax.swing.JButton();
        or1c5 = new javax.swing.JButton();
        br1c1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        allBalls = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        NewGame = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jLabel24.setText("99");

        jLabel25.setText("99");

        jLabel26.setText("99");

        jLabel27.setText("99");

        jLabel28.setText("99");

        jLabel34.setText("99");

        jLabel35.setText("99");

        jLabel36.setText("99");

        jLabel37.setText("99");

        jLabel38.setText("99");

        jLabel44.setText("99");

        jLabel45.setText("99");

        jLabel46.setText("99");

        jLabel47.setText("99");

        jLabel48.setText("99");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setPreferredSize(new java.awt.Dimension(440, 615));
        setResizable(false);
        setSize(new java.awt.Dimension(500, 500));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BingoLogo.jpeg"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("B                 I              N             G               O");

        nr2c3.setLabel("N2");
        nr2c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nr2c3ActionPerformed(evt);
            }
        });

        ir2c2.setLabel("I2");
        ir2c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ir2c2ActionPerformed(evt);
            }
        });

        gr2c4.setLabel("G2");
        gr2c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gr2c4ActionPerformed(evt);
            }
        });

        or2c5.setLabel("O2");
        or2c5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                or2c5ActionPerformed(evt);
            }
        });

        br2c1.setText("B2");
        br2c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                br2c1ActionPerformed(evt);
            }
        });

        freeSpace.setText("X");
        freeSpace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freeSpaceActionPerformed(evt);
            }
        });

        ir3c2.setLabel("I3");
        ir3c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ir3c2ActionPerformed(evt);
            }
        });

        gr3c4.setLabel("G3");
        gr3c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gr3c4ActionPerformed(evt);
            }
        });

        or3c5.setLabel("O3");
        or3c5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                or3c5ActionPerformed(evt);
            }
        });

        br3c1.setText("B3");
        br3c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                br3c1ActionPerformed(evt);
            }
        });

        nr4c3.setLabel("N4");
        nr4c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nr4c3ActionPerformed(evt);
            }
        });

        ir4c2.setLabel("I4");
        ir4c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ir4c2ActionPerformed(evt);
            }
        });

        gr4c4.setLabel("G4");
        gr4c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gr4c4ActionPerformed(evt);
            }
        });

        or4c5.setLabel("O4");
        or4c5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                or4c5ActionPerformed(evt);
            }
        });

        br4c1.setText("B4");
        br4c1.setToolTipText("");
        br4c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                br4c1ActionPerformed(evt);
            }
        });

        nr5c3.setLabel("N5");
        nr5c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nr5c3ActionPerformed(evt);
            }
        });

        ir5c2.setLabel("I5");
        ir5c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ir5c2ActionPerformed(evt);
            }
        });

        gr5c4.setLabel("G5");
        gr5c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gr5c4ActionPerformed(evt);
            }
        });

        or5c5.setLabel("O5");
        or5c5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                or5c5ActionPerformed(evt);
            }
        });

        br5c1.setText("B5");
        br5c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                br5c1ActionPerformed(evt);
            }
        });

        nr1c3.setLabel("N1");
        nr1c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nr1c3ActionPerformed(evt);
            }
        });

        ir1c2.setToolTipText("");
        ir1c2.setLabel("I1");
        ir1c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ir1c2ActionPerformed(evt);
            }
        });

        gr1c4.setLabel("G1");
        gr1c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gr1c4ActionPerformed(evt);
            }
        });

        or1c5.setLabel("O1");
        or1c5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                or1c5ActionPerformed(evt);
            }
        });

        br1c1.setText("B1");
        br1c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                br1c1ActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel6.setText("Balls Drawn");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 29, Short.MAX_VALUE)
        );

        NewGame.setText("New Game");
        NewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewGameActionPerformed(evt);
            }
        });

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        jLabel5.setText("Random Number: ");

        jLabel7.setText("Random Letter: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(randomNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(427, 427, 427)
                                .addComponent(jLabel2))
                            .addComponent(randomLetterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel3))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(NewGame, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(br4c1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ir4c2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(nr4c3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(gr4c4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(br5c1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ir5c2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(nr5c3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(gr5c4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(br3c1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ir3c2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(freeSpace, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(gr3c4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(br2c1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ir2c2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(nr2c3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(gr2c4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(br1c1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ir1c2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(nr1c3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(gr1c4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(or4c5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(or5c5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(or3c5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(or2c5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(or1c5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addGap(50, 50, 50)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(allBalls))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel14))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(randomLetterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(randomNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(allBalls, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(403, 403, 403))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel3)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nr1c3)
                            .addComponent(gr1c4)
                            .addComponent(or1c5)
                            .addComponent(br1c1)
                            .addComponent(ir1c2))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nr2c3)
                            .addComponent(gr2c4)
                            .addComponent(or2c5)
                            .addComponent(br2c1)
                            .addComponent(ir2c2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(freeSpace)
                            .addComponent(gr3c4)
                            .addComponent(or3c5)
                            .addComponent(br3c1)
                            .addComponent(ir3c2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nr4c3)
                            .addComponent(gr4c4)
                            .addComponent(or4c5)
                            .addComponent(br4c1)
                            .addComponent(ir4c2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nr5c3)
                            .addComponent(gr5c4)
                            .addComponent(or5c5)
                            .addComponent(br5c1)
                            .addComponent(ir5c2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(NewGame)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Exit)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startGame() {
        // americanBingo is for standard american bingo game
        int americanBingo = 75;

        // Generate amount of numbers for board and randomize
        gameMind.generateNumbers(americanBingo);

        // creates the number of players asked for
        // player 1 will always be user player ** might change to 0
        // that way the following numbers are all computer players
        for (int i = 0; i < gd.getNumberOfPlayers() + 1; i++) {
            playerMap.add(i, new PlayerControl());
            playerMap.get(i).generateBoard(americanBingo);
        }

        //
        //Fill the columns for users
        fillColumns("B", playerMap.get(1).playerBoard.get("B"));
        fillColumns("I", playerMap.get(1).playerBoard.get("I"));
        fillColumns("N", playerMap.get(1).playerBoard.get("N"));
        fillColumns("G", playerMap.get(1).playerBoard.get("G"));
        fillColumns("O", playerMap.get(1).playerBoard.get("O"));

        startWithCallingNumbers();
        freeSpace.setBackground(Color.green);
        showAllBalls();
    }

    private void NewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewGameActionPerformed
        // pick another game
        this.setVisible(false);
        this.dispose();
        winnerNotFound = false;
        BingoMenu bingo = new BingoMenu();
        bingo.setVisible(true);
    }//GEN-LAST:event_NewGameActionPerformed

    private void nr2c3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_nr2c3ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            nr2c3.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_nr2c3ActionPerformed

    private void ir2c2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ir2c2ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            ir2c2.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_ir2c2ActionPerformed

    private void gr2c4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_gr2c4ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            gr2c4.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_gr2c4ActionPerformed

    private void or2c5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_or2c5ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            or2c5.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_or2c5ActionPerformed

    private void br2c1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_br2c1ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            br2c1.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_br2c1ActionPerformed

    private void freeSpaceActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_freeSpaceActionPerformed
        // TODO add your handling code here:

        freeSpace.setText("0");

    }// GEN-LAST:event_freeSpaceActionPerformed

    private void ir3c2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ir3c2ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            ir3c2.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_ir3c2ActionPerformed

    private void gr3c4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_gr3c4ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            gr3c4.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_gr3c4ActionPerformed

    private void or3c5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_or3c5ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            or3c5.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_or3c5ActionPerformed

    private void br3c1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_br3c1ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            br3c1.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_br3c1ActionPerformed

    private void nr4c3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_nr4c3ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            nr4c3.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_nr4c3ActionPerformed

    private void ir4c2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ir4c2ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            ir4c2.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_ir4c2ActionPerformed

    private void gr4c4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_gr4c4ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            gr4c4.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_gr4c4ActionPerformed

    private void or4c5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_or4c5ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            or4c5.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_or4c5ActionPerformed

    private void br4c1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_br4c1ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            br4c1.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_br4c1ActionPerformed

    private void nr5c3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_nr5c3ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            nr5c3.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_nr5c3ActionPerformed

    private void ir5c2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ir5c2ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            ir5c2.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_ir5c2ActionPerformed

    private void gr5c4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_gr5c4ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            gr5c4.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_gr5c4ActionPerformed

    private void or5c5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_or5c5ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            or5c5.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_or5c5ActionPerformed

    private void br5c1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_br5c1ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            br5c1.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_br5c1ActionPerformed

    private void nr1c3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_nr1c3ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            nr1c3.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_nr1c3ActionPerformed

    private void ir1c2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ir1c2ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            ir1c2.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }

    }// GEN-LAST:event_ir1c2ActionPerformed

    private void gr1c4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_gr1c4ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            gr1c4.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_gr1c4ActionPerformed

    private void or1c5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_or1c5ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            or1c5.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }
    }// GEN-LAST:event_or1c5ActionPerformed

    private void br1c1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_br1c1ActionPerformed
        // TODO add your handling code here:
        // grabs text of button
        int numberOnBoard = Integer.parseInt(evt.getActionCommand());

        // if calledNumberlist contains the number on my board
        if (gameMind.calledNumberList.contains(numberOnBoard) == true) {
            // then confirm number is on my board to change to zero on 
            playerMap.get(1).confirmNumberOnBoard(numberOnBoard);
            br1c1.setBackground(Color.green);
        } else {
            System.out.println("You fool! Lies!");
        }

    }// GEN-LAST:event_br1c1ActionPerformed

    private void cNr5c3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cNr5c3ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cNr5c3ActionPerformed

    private void cIr5c2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cIr5c2ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cIr5c2ActionPerformed

    private void cGr5c4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cGr5c4ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cGr5c4ActionPerformed

    private void cOr5c5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cOr5c5ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cOr5c5ActionPerformed

    private void cBr5c1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cBr5c1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cBr5c1ActionPerformed

    private void cNr1c3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cNr1c3ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cNr1c3ActionPerformed

    private void cIr1c2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cIr1c2ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cIr1c2ActionPerformed

    private void cGr1c4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cGr1c4ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cGr1c4ActionPerformed

    private void cOr1c5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cOr1c5ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cOr1c5ActionPerformed

    private void cBr1c1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cBr1c1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cBr1c1ActionPerformed

    private void cNr2c3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cNr2c3ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cNr2c3ActionPerformed

    private void cIr2c2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cIr2c2ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cIr2c2ActionPerformed

    private void cGr2c4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cGr2c4ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cGr2c4ActionPerformed

    private void cOr2c5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cOr2c5ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cOr2c5ActionPerformed

    private void cBr2c1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cBr2c1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cBr2c1ActionPerformed

    private void cFreeSpaceActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cFreeSpaceActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cFreeSpaceActionPerformed

    private void cIr3c2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cIr3c2ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cIr3c2ActionPerformed

    private void cGr3c4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cGr3c4ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cGr3c4ActionPerformed

    private void cOr3c5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cOr3c5ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cOr3c5ActionPerformed

    private void cBr3c1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cBr3c1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cBr3c1ActionPerformed

    private void cNr4c3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cNr4c3ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cNr4c3ActionPerformed

    private void cIr4c2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cIr4c2ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cIr4c2ActionPerformed

    private void cGr4c4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cGr4c4ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cGr4c4ActionPerformed

    private void cOr4c5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cOr4c5ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cOr4c5ActionPerformed

    private void cBr4c1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cBr4c1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cBr4c1ActionPerformed

    private void NewCardActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_NewCardActionPerformed

    }// GEN-LAST:event_NewCardActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }// GEN-LAST:event_ExitActionPerformed

    private void callNextNumber() {
        // number is called is added to calledNumberList
        // REMEMBER** calledNumberList might be deleted later since theres no
        // reason for it
        nextNumber = gameMind.callNumbers();
        String calledLetter = "";
        gameMind.calledNumberList.add(nextNumber);

        randomLetterLabel.setText("" + nextNumber);

        if (nextNumber <= 15) {
            calledLetter = "B";
        } else if (nextNumber < 30) {
            calledLetter = "I";
        } else if (nextNumber < 45) {
            calledLetter = "N";

        } else if (nextNumber < 60) {
            calledLetter = "G";
        } else if (nextNumber <= 75) {
            calledLetter = "O";
        }
        randomNumberLabel.setText(calledLetter);
    }

    private void startWithCallingNumbers() {

        // Snippet will create a timer to call number every 5s
        Runnable task;
        task = new Runnable() {
            @Override
            public void run() {
                try {
                    
                    // while there is no winner call another ball
                    // TODO
                    do {
                        callNextNumber();
                        
                        checkBoardOfComputer();
                        
                        showAllBalls();
                        
                        Thread.sleep(3000);  // 3 seconds
                        System.out.println(gameMind.calledNumberList);
                        for (int i = 0; i < playerMap.size(); i++) {
                            System.out.println(playerMap.get(i).playerBoard);
                            if (gameMind.confirmWinner(playerMap.get(i), gd.getGameType()) == true) {
                                winnerIs = i;
                                winnerNotFound = false;
                            }
                        }
                    } while (winnerNotFound);
                    
                    winnerAnouncement();
                    
                } catch (InterruptedException ex) {
                    Logger.getLogger(BingoWindow.class.getName()).log(Level.SEVERE,
                            null, ex);
                    
                }
            }
        };

        Thread thread = new Thread(task);
        thread.start();

    }

    private void checkBoardOfComputer() {
        for (int i = 0; i < playerMap.size(); i++) {
            if (i == 1) {
                i++;
            }
            playerMap.get(i).confirmNumberOnBoard(nextNumber);
        }
    }
    
    private void winnerAnouncement() {
        if (winnerIs == 1) {
            JOptionPane.showMessageDialog(this, "Winning Message for User " + winnerIs);

        } else {
            JOptionPane.showMessageDialog(this, "Winning Message for Computer" + winnerIs);
        }
    }

    private void showAllBalls() {
        StringBuilder sb = new StringBuilder();
        sb.append("<html><body style= 'width: 250px'>Balls Drawn: <br/>");

        // Add break line
        int i = 0;
        for (Integer ball : gameMind.calledNumberList) {
            StringBuilder append;
            append = sb.append(ball).append(" ");
            if (++i % 10 == 0) {
                sb.append("<br/>");
            }
        }

        sb.append("</body></html>");

        jLabel6.setText(sb.toString());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed"
        // desc=" Look and feel setting code (optional) ">
        /*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
                    .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BingoWindow.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>
        
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new BingoWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit;
    private javax.swing.JButton NewGame;
    private javax.swing.JLabel allBalls;
    private javax.swing.JButton br1c1;
    private javax.swing.JButton br2c1;
    private javax.swing.JButton br3c1;
    private javax.swing.JButton br4c1;
    private javax.swing.JButton br5c1;
    private javax.swing.JButton freeSpace;
    private javax.swing.JButton gr1c4;
    private javax.swing.JButton gr2c4;
    private javax.swing.JButton gr3c4;
    private javax.swing.JButton gr4c4;
    private javax.swing.JButton gr5c4;
    private javax.swing.JButton ir1c2;
    private javax.swing.JButton ir2c2;
    private javax.swing.JButton ir3c2;
    private javax.swing.JButton ir4c2;
    private javax.swing.JButton ir5c2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton nr1c3;
    private javax.swing.JButton nr2c3;
    private javax.swing.JButton nr4c3;
    private javax.swing.JButton nr5c3;
    private javax.swing.JButton or1c5;
    private javax.swing.JButton or2c5;
    private javax.swing.JButton or3c5;
    private javax.swing.JButton or4c5;
    private javax.swing.JButton or5c5;
    private javax.swing.JLabel randomLetterLabel;
    private javax.swing.JLabel randomNumberLabel;
    // End of variables declaration//GEN-END:variables
}
